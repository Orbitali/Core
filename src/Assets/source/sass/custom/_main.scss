//
// Custom Main
//
// Add your own styles or override existing ones
//
// This file is included last, so you have access
// to all Bootstrap and Dashmix functions/mixins/styles etc
// --------------------------------------------------

// If you have many custom styles, you can create and import additional files
// For example you can create _component1.scss and include it as follows:
// @import 'component1';

.dropzone {
    &.is-invalid {
        border-color: map-get($theme-colors, "danger");
    }
    .dz-preview {
        &.dz-image-preview {
            background: transparent;
            img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }
        }
    }
}

input[type="checkbox"].slug-checkbox {
    display: none;
}

input[type="checkbox"].slug-checkbox + label:before {
    cursor: pointer;
    color: map-get($theme-colors, "danger");
    content: "\f127";
}
input[type="checkbox"].slug-checkbox:checked + label:before {
    color: map-get($theme-colors, "success");
    content: "\f0c1";
}

.select2 {
    .select2-selection {
        border-color: $body-bg;
        background-color: $body-bg;
        transition: none;
        border: 0;
    }
    &.select2-container--open .select2-selection,
    &.select2-container--focus .select2-selection {
        border-color: $body-bg-dark;
        background-color: $body-bg-dark;
        box-shadow: none;
    }
}

.select2-container--default .select2-results__option[aria-selected="true"] {
    background-color: lighten(map-get($theme-colors, "primary"), 50%);
}
.select2-container--default
    .select2-results__option--highlighted[aria-selected] {
    background-color: $form-check-input-checked-bg-color;
}

#visual_desinger,
#category_desinger,
#menu_desinger {
    .block {
        background: rgba(map-get($theme-colors, "primary"), 0.08);
    }
    .salt .block,
    .salt.block {
        background: lighten(rgba(map-get($theme-colors, "danger"), 0.15), 50%);
    }

    #elements .block-options {
        display: none;
    }
}

.gu-mirror {
    position: fixed !important;
    margin: 0 !important;
    z-index: 9999 !important;
    opacity: 0.8;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
    filter: alpha(opacity=80);
    cursor: move;
}

.gu-hide {
    display: none !important;
}

.gu-unselectable {
    -webkit-user-select: none !important;
    -moz-user-select: none !important;
    -ms-user-select: none !important;
    user-select: none !important;
}

.gu-transit {
    opacity: 0.4;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
    filter: alpha(opacity=40);
    & .block-header-default {
        background: #e2e2e2;
    }
}

[data-repeater-count]
    > .nav-tabs
    .nav-item:first-child:not([data-repeater-remove])
    a {
    color: map-get($theme-colors, "danger");
    box-shadow: inset 0 -3px map-get($theme-colors, "danger");
}

.ql-snow {
    &.ql-toolbar {
        border-top-left-radius: 0.25rem;
        border-top-right-radius: 0.25rem;
    }
    &.ql-container {
        border-bottom-left-radius: 0.25rem;
        border-bottom-right-radius: 0.25rem;
    }
}

.table .min-w {
    width: 1%;
}

.block {
    &.block-mode-loading {
        &::before {
            z-index: 1021;
        }

        &::after {
            z-index: 1022;
        }
    }
}
